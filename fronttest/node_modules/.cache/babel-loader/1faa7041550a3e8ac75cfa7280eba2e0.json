{"ast":null,"code":"import { LogActionType } from \"../Action-Types\";\nexport const initialState = {\n  username: \"\"\n};\n\nfunction validateInput(str) {\n  if (str.length > 0 && str.length < 10) return true;\n  return false;\n}\n\nexport const logReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LogActionType.SETUSERNAME:\n      {\n        if (validateInput(action.payload)) return { ...state,\n          username: action.payload\n        };else return state;\n      }\n\n    default:\n      return state;\n  }\n}; // case actionTypes.ADD: {\n//   return {\n//     ...state,\n//     count: state.count + 1,\n//     list: [...state.list, action.payload]\n//   };\n// }\n// case actionTypes.DELETE: {\n//   const oldList = [...state.list];\n//   const newList = oldList;\n//   return {\n//     ...state,\n//     count: state.count - 1,\n//     list: newList\n//   };\n// }","map":{"version":3,"names":["LogActionType","initialState","username","validateInput","str","length","logReducer","state","action","type","SETUSERNAME","payload"],"sources":["/Users/cgangaro/chat-app_Nestjs-React_Redux-Socket.io/fronttest/src/State/Reducers/logReducer.tsx"],"sourcesContent":["import { LogActionType } from \"../Action-Types\";\nimport { logAction } from \"../Actions\";\n\ninterface LogData {\n  username: string;\n}\n\nexport const initialState: LogData = {\n  username: \"\"\n};\n\nfunction validateInput(str: string) {\n    if (str.length > 0 && str.length < 10)\n        return true;\n    return false;\n}\n\nexport const logReducer = (state: LogData = initialState, action: logAction) => {\n    switch (action.type) {\n        case LogActionType.SETUSERNAME: {\n            if (validateInput(action.payload))\n                return {\n                ...state,\n                username: action.payload\n                };\n            else\n                return state;\n        }\n        default:\n        return state;\n    }\n};\n\n// case actionTypes.ADD: {\n//   return {\n//     ...state,\n//     count: state.count + 1,\n//     list: [...state.list, action.payload]\n//   };\n// }\n// case actionTypes.DELETE: {\n//   const oldList = [...state.list];\n//   const newList = oldList;\n\n//   return {\n//     ...state,\n//     count: state.count - 1,\n//     list: newList\n//   };\n// }"],"mappings":"AAAA,SAASA,aAAT,QAA8B,iBAA9B;AAOA,OAAO,MAAMC,YAAqB,GAAG;EACnCC,QAAQ,EAAE;AADyB,CAA9B;;AAIP,SAASC,aAAT,CAAuBC,GAAvB,EAAoC;EAChC,IAAIA,GAAG,CAACC,MAAJ,GAAa,CAAb,IAAkBD,GAAG,CAACC,MAAJ,GAAa,EAAnC,EACI,OAAO,IAAP;EACJ,OAAO,KAAP;AACH;;AAED,OAAO,MAAMC,UAAU,GAAG,YAAsD;EAAA,IAArDC,KAAqD,uEAApCN,YAAoC;EAAA,IAAtBO,MAAsB;;EAC5E,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKT,aAAa,CAACU,WAAnB;MAAgC;QAC5B,IAAIP,aAAa,CAACK,MAAM,CAACG,OAAR,CAAjB,EACI,OAAO,EACP,GAAGJ,KADI;UAEPL,QAAQ,EAAEM,MAAM,CAACG;QAFV,CAAP,CADJ,KAMI,OAAOJ,KAAP;MACP;;IACD;MACA,OAAOA,KAAP;EAXJ;AAaH,CAdM,C,CAgBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}