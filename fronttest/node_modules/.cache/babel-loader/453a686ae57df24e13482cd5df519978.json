{"ast":null,"code":"import { clientListActionType } from \"../Action-Types\";\nexport const initialState = {\n  count: 0,\n  active: \"\",\n  list: []\n};\nexport const clientListReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case clientListActionType.ADDCLIENT:\n      {\n        if (state.list.find(item => item.username === action.payload.username)) return state;else return { ...state,\n          count: state.count + 1,\n          active: state.active,\n          list: [...state.list, action.payload]\n        };\n      }\n\n    case clientListActionType.REMOVECLIENT:\n      {\n        return { ...state,\n          count: state.count - 1,\n          active: state.active,\n          list: state.list.filter(item => item.id !== action.payload.id)\n        };\n      }\n\n    case clientListActionType.ADDMSG:\n      {\n        let index = -1;\n        let newState = state;\n\n        if (action.payload.sender == \"Me\") {\n          index = state.list.findIndex(item => item.username === action.payload.recipient);\n        } else {\n          index = state.list.findIndex(item => item.username === action.payload.sender);\n        }\n\n        if (index >= 0) {\n          newState.list[index].convers.msg = [...newState.list[index].convers.msg, action.payload];\n          return { ...state,\n            count: state.count,\n            active: state.active,\n            list: newState.list\n          };\n        } else {\n          return state;\n        }\n      }\n\n    case clientListActionType.SETACTIVECONVERS:\n      {\n        return { ...state,\n          count: state.count,\n          active: action.payload,\n          list: state.list\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["clientListActionType","initialState","count","active","list","clientListReducer","state","action","type","ADDCLIENT","find","item","username","payload","REMOVECLIENT","filter","id","ADDMSG","index","newState","sender","findIndex","recipient","convers","msg","SETACTIVECONVERS"],"sources":["/Users/cgangaro/chat-app_Nestjs-React_Redux-Socket.io/fronttest/src/State/Reducers/clientListReducer.tsx"],"sourcesContent":["import { validateInput } from \"../../Utils/logUtils\";\nimport { clientListActionType } from \"../Action-Types\";\nimport { clientListAction } from \"../Actions\";\nimport { ClientList } from \"../type\";\n\nexport const initialState: ClientList = {\n    count: 0,\n    active: \"\",\n    list: []\n  };\n\nexport const clientListReducer = (state: ClientList = initialState, action: clientListAction) => {\n  switch (action.type) {\n    case clientListActionType.ADDCLIENT: {\n      if (state.list.find(item => item.username === action.payload.username))\n        return state;\n      else\n        return {\n          ...state,\n          count: state.count + 1,\n          active: state.active,\n          list: [...state.list, action.payload]\n        };\n    }\n    case clientListActionType.REMOVECLIENT: {\n      return {\n          ...state,\n          count: state.count - 1,\n          active: state.active,\n          list: state.list.filter(item => item.id !== action.payload.id)\n        };\n    }\n    case clientListActionType.ADDMSG: {\n      let index = -1;\n      let newState = state;\n      if (action.payload.sender == \"Me\")\n      {\n        index = state.list.findIndex(item => item.username === action.payload.recipient);\n      }\n      else\n      {\n        index = state.list.findIndex(item => item.username === action.payload.sender);\n      }\n      if (index >= 0)\n      {\n        newState.list[index].convers.msg = [...newState.list[index].convers.msg, action.payload];\n        return {\n          ...state,\n          count: state.count,\n          active: state.active,\n          list: newState.list\n        };\n      }\n      else {\n        return state;\n      }\n    }\n    case clientListActionType.SETACTIVECONVERS: {\n      return {\n        ...state,\n        count: state.count,\n        active: action.payload,\n        list: state.list\n      }\n    }\n    default:\n      return state;\n  }\n};"],"mappings":"AACA,SAASA,oBAAT,QAAqC,iBAArC;AAIA,OAAO,MAAMC,YAAwB,GAAG;EACpCC,KAAK,EAAE,CAD6B;EAEpCC,MAAM,EAAE,EAF4B;EAGpCC,IAAI,EAAE;AAH8B,CAAjC;AAMP,OAAO,MAAMC,iBAAiB,GAAG,YAAgE;EAAA,IAA/DC,KAA+D,uEAA3CL,YAA2C;EAAA,IAA7BM,MAA6B;;EAC/F,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKR,oBAAoB,CAACS,SAA1B;MAAqC;QACnC,IAAIH,KAAK,CAACF,IAAN,CAAWM,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBL,MAAM,CAACM,OAAP,CAAeD,QAAzD,CAAJ,EACE,OAAON,KAAP,CADF,KAGE,OAAO,EACL,GAAGA,KADE;UAELJ,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAc,CAFhB;UAGLC,MAAM,EAAEG,KAAK,CAACH,MAHT;UAILC,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBG,MAAM,CAACM,OAAvB;QAJD,CAAP;MAMH;;IACD,KAAKb,oBAAoB,CAACc,YAA1B;MAAwC;QACtC,OAAO,EACH,GAAGR,KADA;UAEHJ,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAc,CAFlB;UAGHC,MAAM,EAAEG,KAAK,CAACH,MAHX;UAIHC,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWW,MAAX,CAAkBJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYT,MAAM,CAACM,OAAP,CAAeG,EAArD;QAJH,CAAP;MAMD;;IACD,KAAKhB,oBAAoB,CAACiB,MAA1B;MAAkC;QAChC,IAAIC,KAAK,GAAG,CAAC,CAAb;QACA,IAAIC,QAAQ,GAAGb,KAAf;;QACA,IAAIC,MAAM,CAACM,OAAP,CAAeO,MAAf,IAAyB,IAA7B,EACA;UACEF,KAAK,GAAGZ,KAAK,CAACF,IAAN,CAAWiB,SAAX,CAAqBV,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBL,MAAM,CAACM,OAAP,CAAeS,SAA9D,CAAR;QACD,CAHD,MAKA;UACEJ,KAAK,GAAGZ,KAAK,CAACF,IAAN,CAAWiB,SAAX,CAAqBV,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBL,MAAM,CAACM,OAAP,CAAeO,MAA9D,CAAR;QACD;;QACD,IAAIF,KAAK,IAAI,CAAb,EACA;UACEC,QAAQ,CAACf,IAAT,CAAcc,KAAd,EAAqBK,OAArB,CAA6BC,GAA7B,GAAmC,CAAC,GAAGL,QAAQ,CAACf,IAAT,CAAcc,KAAd,EAAqBK,OAArB,CAA6BC,GAAjC,EAAsCjB,MAAM,CAACM,OAA7C,CAAnC;UACA,OAAO,EACL,GAAGP,KADE;YAELJ,KAAK,EAAEI,KAAK,CAACJ,KAFR;YAGLC,MAAM,EAAEG,KAAK,CAACH,MAHT;YAILC,IAAI,EAAEe,QAAQ,CAACf;UAJV,CAAP;QAMD,CATD,MAUK;UACH,OAAOE,KAAP;QACD;MACF;;IACD,KAAKN,oBAAoB,CAACyB,gBAA1B;MAA4C;QAC1C,OAAO,EACL,GAAGnB,KADE;UAELJ,KAAK,EAAEI,KAAK,CAACJ,KAFR;UAGLC,MAAM,EAAEI,MAAM,CAACM,OAHV;UAILT,IAAI,EAAEE,KAAK,CAACF;QAJP,CAAP;MAMD;;IACD;MACE,OAAOE,KAAP;EAtDJ;AAwDD,CAzDM"},"metadata":{},"sourceType":"module"}