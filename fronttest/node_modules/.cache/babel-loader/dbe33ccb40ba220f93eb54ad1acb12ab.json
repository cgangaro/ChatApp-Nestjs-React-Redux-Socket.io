{"ast":null,"code":"var _jsxFileName = \"/Users/cgangaro/chat-app_Nestjs-React_Redux-Socket.io/fronttest/src/Components/AffMsg.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../State';\nimport \"./CSS/AffMsg.css\";\nimport \"./CSS/All.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AffMsg() {\n  _s();\n\n  const msgList = useSelector(state => state.msg);\n  const logData = useSelector(state => state.log);\n  const utilsData = useSelector(state => state.utils);\n  const dispatch = useDispatch();\n  const {\n    msgAdd,\n    setUsername\n  } = bindActionCreators(actionCreators, dispatch);\n  const [id, setId] = useState('');\n  const [text, setText] = useState('Wsh la team');\n  const [recipient, setRecipient] = useState(''); // utilsData.socket.removeAllListeners();\n  // utilsData.socket.on('connect', function() {\n  //     console.log('Connected');\n  //     utilsData.socket.emit('msgConnection');\n  // });\n  // utilsData.socket.on('disconnect', function() {\n  //     console.log('Disconnected');\n  // });\n  // utilsData.socket.on('msgToClient', function(data: any) {\n  //     if (data === 505)\n  //     console.log('msgToServer', 'Msg bien reçu : 505');\n  //     else\n  //     console.log('msgToServer', data);\n  // });\n  // utilsData.socket.on('ID', function(data: any) {\n  //     console.log('ID received :', data);\n  //     setId(data);\n  // });\n  // utilsData.socket.on('msgInputToOtherClient', function(msgToSend: any) {\n  //     console.log(msgToSend.sender, 'said: ', msgToSend.text);\n  //     let newmsg: msgList = {\n  //         sender: msgToSend.sender,\n  //         text: msgToSend.text\n  //     }\n  //     msgAdd(newmsg);\n  // })\n  // function validateInput() {\n  //     return id.length > 0 && text.length > 0 && recipient.length > 0;\n  // }\n  // function sendMessage() {\n  //     console.log(\"sendMessage()\")\n  //     if (validateInput()) {\n  //     const message: msgToSend = {\n  //         sender: id,\n  //         recipient: recipient,\n  //         text: text,\n  //     };\n  //     const msgToList: msgList = {\n  //         sender: logData.username,\n  //         text: text\n  //     }\n  //     utilsData.socket.emit('msgToOtherClient', message);\n  //     msgAdd(msgToList);\n  //     setText('');\n  //     }\n  // }\n  // const newmsg: msgList = {\n  //     text: \"ok1\",\n  //     sender: \"ok2\"\n  // }\n  // function DisplayBubble(props: {msg: msgList}) {\n  //     if (props.msg.sender ===  logData.username)\n  //         return (\n  //             <div className=\"msgFrame\" id=\"myMsgFrame\">\n  //                 <div className=\"bubble\" id=\"myBubbleMessage\">\n  //                     <p>{props.msg.text}</p>\n  //                 </div>\n  //             </div>\n  //         )\n  //     else\n  //         return (\n  //             <div className=\"msgFrame\" id=\"correspondentMsgFrame\">\n  //                 <div className=\"bubble\" id=\"correspondentBubbleMessage\">\n  //                     <p>{props.msg.text}</p>\n  //                 </div>\n  //             </div>\n  //         )\n  // }\n\n  function sendMessage() {\n    console.log(\"sendMessage()\");\n    const message = {\n      sender: id,\n      recipient: recipient,\n      text: text\n    };\n    console.log(message.text);\n    utilsData.socket.emit('msgToServer', message);\n    setText('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => utilsData.socket.emit('msgToServer'),\n      children: \"AddMsg Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(AffMsg, \"Ue+kH0SEgeUl1Bv4DHcaNHo3TTU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = AffMsg;\nexport default AffMsg;\n\nvar _c;\n\n$RefreshReg$(_c, \"AffMsg\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","bindActionCreators","actionCreators","AffMsg","msgList","state","msg","logData","log","utilsData","utils","dispatch","msgAdd","setUsername","id","setId","text","setText","recipient","setRecipient","sendMessage","console","message","sender","socket","emit"],"sources":["/Users/cgangaro/chat-app_Nestjs-React_Redux-Socket.io/fronttest/src/Components/AffMsg.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../State\";\nimport { msgList } from \"../State/type\";\nimport io from 'socket.io-client';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../State';\nimport \"./CSS/AffMsg.css\"\nimport \"./CSS/All.css\"\n\ninterface msgToSend {\n    sender: string;\n    recipient: string;\n    text: string;\n  }\n\nfunction AffMsg() {\n    const msgList = useSelector((state: RootState) => state.msg)\n    const logData = useSelector((state: RootState) => state.log)\n    const utilsData = useSelector((state: RootState) => state.utils)\n    const dispatch = useDispatch();\n\n    const { msgAdd, setUsername } = bindActionCreators(actionCreators, dispatch);\n\n    const [id, setId] = useState('');\n    const [text, setText] = useState('Wsh la team');\n    const [recipient, setRecipient] = useState('');\n\n    // utilsData.socket.removeAllListeners();\n\n    // utilsData.socket.on('connect', function() {\n    //     console.log('Connected');\n    //     utilsData.socket.emit('msgConnection');\n    // });\n\n    // utilsData.socket.on('disconnect', function() {\n    //     console.log('Disconnected');\n    // });\n    \n    // utilsData.socket.on('msgToClient', function(data: any) {\n    //     if (data === 505)\n    //     console.log('msgToServer', 'Msg bien reçu : 505');\n    //     else\n    //     console.log('msgToServer', data);\n    // });\n\n    // utilsData.socket.on('ID', function(data: any) {\n    //     console.log('ID received :', data);\n    //     setId(data);\n    // });\n\n    // utilsData.socket.on('msgInputToOtherClient', function(msgToSend: any) {\n    //     console.log(msgToSend.sender, 'said: ', msgToSend.text);\n    //     let newmsg: msgList = {\n    //         sender: msgToSend.sender,\n    //         text: msgToSend.text\n    //     }\n    //     msgAdd(newmsg);\n    // })\n\n    // function validateInput() {\n    //     return id.length > 0 && text.length > 0 && recipient.length > 0;\n    // }\n\n    // function sendMessage() {\n    //     console.log(\"sendMessage()\")\n    //     if (validateInput()) {\n    //     const message: msgToSend = {\n    //         sender: id,\n    //         recipient: recipient,\n    //         text: text,\n    //     };\n    //     const msgToList: msgList = {\n    //         sender: logData.username,\n    //         text: text\n    //     }\n\n    //     utilsData.socket.emit('msgToOtherClient', message);\n    //     msgAdd(msgToList);\n    //     setText('');\n    //     }\n    // }\n\n    // const newmsg: msgList = {\n    //     text: \"ok1\",\n    //     sender: \"ok2\"\n    // }\n\n    // function DisplayBubble(props: {msg: msgList}) {\n    //     if (props.msg.sender ===  logData.username)\n    //         return (\n    //             <div className=\"msgFrame\" id=\"myMsgFrame\">\n    //                 <div className=\"bubble\" id=\"myBubbleMessage\">\n    //                     <p>{props.msg.text}</p>\n    //                 </div>\n    //             </div>\n    //         )\n    //     else\n    //         return (\n    //             <div className=\"msgFrame\" id=\"correspondentMsgFrame\">\n    //                 <div className=\"bubble\" id=\"correspondentBubbleMessage\">\n    //                     <p>{props.msg.text}</p>\n    //                 </div>\n    //             </div>\n    //         )\n    // }\n\n    function sendMessage() {\n        console.log(\"sendMessage()\")\n\n        const message: msgToSend = {\n            sender: id,\n            recipient: recipient,\n            text: text,\n        };\n\n        console.log(message.text)\n \n\n        utilsData.socket.emit('msgToServer', message);\n        setText('');\n        }\n\n  return (\n    <>\n        {/* <div className=\"main_container\" id=\"main_AffMsg\">\n            <div id=\"affichage\">\n                {msgList.msg.map((msg, index) => (\n                    <div id=\"affListMsg\" key={index}>\n                        <DisplayBubble msg={msg}/>\n                    </div>\n                ))}\n            </div>\n            <div id=\"send\">\n                <input\n                    value={recipient}\n                    onChange={e => setRecipient(e.target.value)}\n                    placeholder=\"Recipient...\"\n                />\n                <input\n                    value={text}\n                    onChange={e => setText(e.target.value)}\n                    placeholder=\"Enter message...\"\n                />\n                <button type=\"button\" onClick={() => sendMessage()}>\n                    Send\n                </button>\n                <button onClick={() => msgAdd(newmsg)}>AddMsg Test</button>\n            </div>\n        </div> */}\n        <button onClick={() => utilsData.socket.emit('msgToServer')}>AddMsg Test</button>\n    </>\n  );\n}\n\nexport default AffMsg;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAO,kBAAP;AACA,OAAO,eAAP;;;;AAQA,SAASC,MAAT,GAAkB;EAAA;;EACd,MAAMC,OAAO,GAAGL,WAAW,CAAEM,KAAD,IAAsBA,KAAK,CAACC,GAA7B,CAA3B;EACA,MAAMC,OAAO,GAAGR,WAAW,CAAEM,KAAD,IAAsBA,KAAK,CAACG,GAA7B,CAA3B;EACA,MAAMC,SAAS,GAAGV,WAAW,CAAEM,KAAD,IAAsBA,KAAK,CAACK,KAA7B,CAA7B;EACA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;EAEA,MAAM;IAAEY,MAAF;IAAUC;EAAV,IAA0BZ,kBAAkB,CAACC,cAAD,EAAiBS,QAAjB,CAAlD;EAEA,MAAM,CAACG,EAAD,EAAKC,KAAL,IAAcjB,QAAQ,CAAC,EAAD,CAA5B;EACA,MAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,aAAD,CAAhC;EACA,MAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,EAAD,CAA1C,CAVc,CAYd;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAASsB,WAAT,GAAuB;IACnBC,OAAO,CAACb,GAAR,CAAY,eAAZ;IAEA,MAAMc,OAAkB,GAAG;MACvBC,MAAM,EAAET,EADe;MAEvBI,SAAS,EAAEA,SAFY;MAGvBF,IAAI,EAAEA;IAHiB,CAA3B;IAMAK,OAAO,CAACb,GAAR,CAAYc,OAAO,CAACN,IAApB;IAGAP,SAAS,CAACe,MAAV,CAAiBC,IAAjB,CAAsB,aAAtB,EAAqCH,OAArC;IACAL,OAAO,CAAC,EAAD,CAAP;EACC;;EAEP,oBACE;IAAA,uBA0BI;MAAQ,OAAO,EAAE,MAAMR,SAAS,CAACe,MAAV,CAAiBC,IAAjB,CAAsB,aAAtB,CAAvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EA1BJ,iBADF;AA8BD;;GAzIQtB,M;UACWJ,W,EACAA,W,EACEA,W,EACDC,W;;;KAJZG,M;AA2IT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}