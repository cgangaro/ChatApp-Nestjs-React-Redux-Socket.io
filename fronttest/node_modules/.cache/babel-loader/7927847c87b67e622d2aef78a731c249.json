{"ast":null,"code":"var _jsxFileName = \"/Users/cgangaro/chat-app_Nestjs-React_Redux-Socket.io/fronttest/src/Components/AffMsg.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../State';\nimport \"./CSS/AffMsg.css\";\nimport \"./CSS/All.css\";\nimport { validateInput } from '../Utils/logUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AffMsg() {\n  _s();\n\n  const clientList = useSelector(state => state.clientList);\n  const logData = useSelector(state => state.log);\n  const utilsData = useSelector(state => state.utils);\n  const dispatch = useDispatch();\n  const {\n    addMsg\n  } = bindActionCreators(actionCreators, dispatch);\n  const [text, setText] = useState('Wsh la team');\n  const [recipient, setRecipient] = useState('');\n  const [index, setIndex] = useState(-1);\n\n  function DisplayBubble(props) {\n    if (props.msg.sender === \"Me\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msgFrame\",\n      id: \"myMsgFrame\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bubble\",\n        id: \"myBubbleMessage\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msgFrame\",\n      id: \"correspondentMsgFrame\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bubble\",\n        id: \"correspondentBubbleMessage\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this);\n  }\n\n  function sendMessage() {\n    if (clientList.active.length > 0) {\n      if (validateInput(clientList.active) && validateInput(text)) {\n        const message = {\n          sender: logData.username,\n          recipient: clientList.active,\n          text: text\n        };\n        const msgToList = {\n          sender: \"Me\",\n          recipient: clientList.active,\n          text: text\n        };\n        utilsData.socket.emit('msgToOtherClient', message);\n        addMsg(msgToList);\n        setText('');\n      } else console.log(\"Msg non valide\");\n    } else console.log(\"Send: pas de convers active\");\n  }\n\n  function DisplayConvers() {\n    if (clientList.active.length > 0) {\n      console.log(`convers activ = ${clientList.active}, count ${clientList.count}`);\n      const index_test = clientList.list.findIndex(item => item.username === clientList.active);\n      setIndex(index_test);\n\n      if (index >= 0) {\n        const client = clientList.list[index];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"affichage\",\n          children: client.convers.msg.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"affListMsg\",\n            children: /*#__PURE__*/_jsxDEV(DisplayBubble, {\n              msg: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"affichage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"affichage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_container\",\n      id: \"main_AffMsg\",\n      children: [/*#__PURE__*/_jsxDEV(DisplayConvers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sendZone\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => sendMessage(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(AffMsg, \"+kGNMYrh5cGbOgLe1T40UukdaEI=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = AffMsg;\nexport default AffMsg;\n\nvar _c;\n\n$RefreshReg$(_c, \"AffMsg\");","map":{"version":3,"names":["useState","useSelector","useDispatch","bindActionCreators","actionCreators","validateInput","AffMsg","clientList","state","logData","log","utilsData","utils","dispatch","addMsg","text","setText","recipient","setRecipient","index","setIndex","DisplayBubble","props","msg","sender","sendMessage","active","length","message","username","msgToList","socket","emit","console","DisplayConvers","count","index_test","list","findIndex","item","client","convers","map","e","target","value"],"sources":["/Users/cgangaro/chat-app_Nestjs-React_Redux-Socket.io/fronttest/src/Components/AffMsg.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport ScrollToBottom, { useScrollToBottom } from 'react-scroll-to-bottom';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../State\";\nimport { msg } from \"../State/type\";\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../State';\nimport \"./CSS/AffMsg.css\"\nimport \"./CSS/All.css\"\nimport { validateInput } from '../Utils/logUtils';\n\ninterface msgToSend {\n    sender: string;\n    recipient: string;\n    text: string;\n  }\n\nfunction AffMsg() {\n\n    const clientList = useSelector((state: RootState) => state.clientList)\n    const logData = useSelector((state: RootState) => state.log)\n    const utilsData = useSelector((state: RootState) => state.utils)\n    const dispatch = useDispatch();\n\n    const { addMsg } = bindActionCreators(actionCreators, dispatch);\n\n    const [text, setText] = useState('Wsh la team');\n    const [recipient, setRecipient] = useState('');\n    const [index, setIndex] = useState(-1);\n\n    function DisplayBubble(props: {msg: msg}) {\n        if (props.msg.sender ===  \"Me\")\n            return (\n                <div className=\"msgFrame\" id=\"myMsgFrame\">\n                    <div className=\"bubble\" id=\"myBubbleMessage\">\n                        <p>{props.msg.text}</p>\n                    </div>\n                </div>\n            )\n        else\n            return (\n                <div className=\"msgFrame\" id=\"correspondentMsgFrame\">\n                    <div className=\"bubble\" id=\"correspondentBubbleMessage\">\n                        <p>{props.msg.text}</p>\n                    </div>\n                </div>\n            )\n    }\n\n    function sendMessage() {\n        if (clientList.active.length > 0)\n        {\n            if (validateInput(clientList.active) && validateInput(text)) {\n                const message: msgToSend = {\n                    sender: logData.username,\n                    recipient: clientList.active,\n                    text: text,\n                }\n                const msgToList: msg = { \n                    sender: \"Me\",\n                    recipient: clientList.active,\n                    text: text\n                };\n                utilsData.socket.emit('msgToOtherClient', message);\n                addMsg(msgToList);\n                setText('');\n            }\n            else\n                console.log(\"Msg non valide\")\n        }\n        else\n            console.log(\"Send: pas de convers active\")\n    }\n\n    function DisplayConvers() {\n        if (clientList.active.length > 0)\n        {\n            console.log(`convers activ = ${clientList.active}, count ${clientList.count}`);\n            const index_test = clientList.list.findIndex(item => item.username === clientList.active);\n            setIndex(index_test);\n            if (index >= 0)\n            {\n                const client = clientList.list[index];\n                return (\n                    <div id=\"affichage\">\n                        {client.convers.msg.map((msg, index) => (\n                            <div id=\"affListMsg\" key={index}>\n                                <DisplayBubble msg={msg}/>\n                            </div>\n                        ))}\n                    </div>\n                );\n            }\n            else\n            {\n                return (\n                    <div id=\"affichage\">\n                    </div>\n                );\n            }\n        }\n        else\n        {\n            return (\n                <div id=\"affichage\">\n                </div>\n            );\n        }\n    }\n\n    return (\n    <>\n        <div className=\"main_container\" id=\"main_AffMsg\">\n            <DisplayConvers/>\n            <div id=\"sendZone\">\n                <input\n                    value={text}\n                    onChange={e => setText(e.target.value)}\n                    placeholder=\"Enter message...\"\n                />\n                <button type=\"button\" onClick={() => sendMessage()}>\n                    Send\n                </button>\n            </div>\n        </div>\n    </>\n  );\n}\n\nexport default AffMsg;"],"mappings":"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"},"metadata":{},"sourceType":"module"}